@* @model PaginatedList<PracticaIntegradora.Models.Pedido>

@{
    ViewData["Title"] = "Index";
}

<h1>Pedidos</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Fecha
            </th>
            <th>
                Confirmado
            </th>
            <th>
                Preparado
            </th>
            <th>
                Enviado
            </th>
            <th>
                Cobrado
            </th>
            <th>
                Devuelto
            </th>
            <th>
                Anulado
            </th>
            <th>
                Cliente
            </th>
            <th>
                Estado
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Fecha)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Confirmado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Preparado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Enviado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cobrado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Devuelto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Anulado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cliente.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado.Descripcion)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-outline-secondary @prevDisabled">
    Anterior
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-outline-secondary @nextDisabled">
    Siguiente
</a> *@

@model PaginatedList<PracticaIntegradora.Models.Pedido>

@{
    ViewData["Title"] = "Pedidos";
}

<div class="container py-4">
    <h1 class="text-center mb-4">Pedidos</h1>

    @* <div class="text-end mb-3">
        <a asp-action="Create" class="btn btn-primary text-white">
            <i class="fas fa-plus"></i> Nuevo Pedido
        </a>
    </div> *@

    <div class="table-responsive shadow-sm rounded">
        <table class="table table-striped table-hover text-center align-middle">
            <thead class="bg-primary text-white">
                <tr>
                    <th>Fecha</th>
                    <th>Confirmado</th>
                    <th>Preparado</th>
                    <th>Enviado</th>
                    <th>Cobrado</th>
                    <th>Devuelto</th>
                    <th>Anulado</th>
                    <th>Cliente</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Fecha)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Confirmado)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Preparado)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Enviado)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cobrado)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Devuelto)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Anulado)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Cliente.Nombre)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Estado.Descripcion)
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm text-white">Editar</a>
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm text-white">Detalles</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm text-white">Eliminar</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-center mt-4">
        <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
           class="btn btn-outline-secondary me-2 text-dark @(Model.HasPreviousPage ? "" : "disabled")">
            Anterior
        </a>
        <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
           class="btn btn-outline-secondary text-dark @(Model.HasNextPage ? "" : "disabled")">
            Siguiente
        </a>
    </div>
</div>