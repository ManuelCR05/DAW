@model PaginatedList<PracticaIntegradora.Models.Detalle>

@{
    ViewData["Title"] = "Index";
}

<h1>Detalles</h1>

<p>
    <a asp-action="Create">Crear un nuevo Detalle</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Cantidad
            </th>
            <th>
                Precio
            </th>
            <th>
                Descuento
            </th>
            <th>
                Pedido
            </th>
            <th>
                Producto
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Cantidad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Precio)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descuento)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pedido.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Producto.Descripcion)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalles</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Eliminar</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-outline-secondary @prevDisabled">
    Anterior
</a>
<a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-outline-secondary @nextDisabled">
    Siguiente
</a>